#include <stdio.h>
#include <string.h>

int count = 11; // Nombre actuel de contacts
int trouver =1;
int boucle_while =0;
char nom_et_prenom_pour_modifier[50];

struct Equipe{
int id;
char nom_et_prenom[50];
int numeroMaillot;
char poste[11];
int age;
int buts;
int statu;
};
struct Equipe equip[100] = {
    {100,"ayoub Benzema", 9,"attaquant",35,210,0},
    {101,"karim Benzema", 9,"attaquant",35,210,0},
    {102,"kianluigi Donnarumma", 99, "gardien", 25, 0,0},
    {103,"airgil van Dijk", 4, "dfenseur", 33, 15,0},
    {104,"luka Modric", 10, "milieu", 39, 45,0},
    {105,"kylian ayoub", 7, "attaquant", 26, 220,0},
    {106,"manuel Neuer", 1, "gardien", 38, 0,0},
    {107,"sergio Ramos", 4, "dfenseur", 39, 105,0},
    {108,"sevin De Bruyne", 17, "milieu", 34, 95,0},
    {109,"robert Lewandowski", 9, "attaquant", 37, 320,0},
    {110,"achraf Hakimi", 2, "dfenseur",27,25,0}
};
int choix_de_post;
int nxid =111;
void clear_buffer() {
    int c;
    while ((c = getchar()) != '\n' && c != EOF);
}



void line(){

  printf("\n --------------------------------------\n");
}
void afficher_entete_tableau() {
    printf("\n-------------------------------------------------------------------------------\n");
    printf("| %-4s | %-20s | %-8s | %-10s | %-3s | %-4s |\n",
           "ID", "Nom et Prénom", "Maillot", "Poste", "Age", "Buts");
    printf("-------------------------------------------------------------------------------\n");
}
void afficher_fin_tableau() {
    printf("-------------------------------------------------------------------------------\n");
}


void afficher_joueur(struct Equipe e) {
    if (e.statu != 1) {
        printf("| %-4d | %-20s | %-8d | %-10s | %-3d | %-4d |\n",
               e.id, e.nom_et_prenom, e.numeroMaillot, e.poste, e.age, e.buts);
    }
}
//---------------------------------------------------------------------------------

void Ajouter_un_joueur(int choix_count_joeur){
    
for(int count_joeur =0;count_joeur<choix_count_joeur;count_joeur++){
boucle_while =0;
clear_buffer();
 printf("\nEnter nom et prenom de jouer %d: ",count_joeur+1);
  
  fgets(equip[count].nom_et_prenom, sizeof(equip[count].nom_et_prenom), stdin);
  equip[count].nom_et_prenom[strcspn(equip[count].nom_et_prenom, "\n")] = '\0';

int char_n =0;

 while (equip[count].nom_et_prenom[char_n] != '\0')
 {
  if (equip[count].nom_et_prenom[char_n]>='A'&&equip[count].nom_et_prenom[char_n]<='Z')
  {
    equip[count].nom_et_prenom[char_n] =equip[count].nom_et_prenom[char_n] + 32;
  }

  char_n++;
 }
 
  printf("Enter numero Maillot de joeur %d: ",count_joeur+1);
  scanf("%d",&equip[count].numeroMaillot);
while (boucle_while != 1)
{
  printf("choisir le poste :\n1)gardien\n2)dأ©fenseur\n3)milieu\n4)attaquant");
  printf("\n Enter num de poste de joeur %d :",count_joeur+1);
  scanf("%d",&choix_de_post);
  if(choix_de_post==1||choix_de_post==2||choix_de_post==3||choix_de_post==4){
    boucle_while =1;
  switch(choix_de_post){
       case 1:
       strcpy(equip[count].poste,"gardien");
       break;
       case 2:
       strcpy(equip[count].poste,"dأ©fenseur");
       break;
       case 3:
       strcpy(equip[count].poste,"milieu");
       break;
       case 4:
       strcpy(equip[count].poste,"attaquant");
       break;

       
  }

}else{
    printf("\n !! choix incorect !!\n");
}
}

printf("Enter age  de joeur %d : ",count_joeur+1);
scanf("%d",&equip[count].age);

printf("Enter buts de joeur %d : ",count_joeur+1);
scanf("%d",&equip[count].buts);
equip[count].statu=0;
line();

equip[count].id=nxid++;
count ++;
    }
}

//---------------------------------------------------------------------------------
void Afficher_un_joueur(int choix_Affichage){
    switch(choix_Affichage){
case 1: // Tri alphabأ©tique par nom (seulement le premier nom)
    for (int step = 0; step < count; step++) {
        int min_idx = step;
        for (int i = step + 1; i <= count; i++) {
          

         
           
            if (strcmp(equip[i].nom_et_prenom, equip[min_idx].nom_et_prenom) > 0) {
                min_idx = i;
            }
        }

       
        if (min_idx != step) {
            struct Equipe temp = equip[step];
            equip[step] = equip[min_idx];
            equip[min_idx] = temp;
        }
            afficher_entete_tableau();
            afficher_joueur(equip[step]);
            afficher_entete_tableau();
                       }
         break;


case 2: // Tri par أ¢g

        
            for (int step = 0; step < count; step++) {
                int min_idx = step;
                for (int i = step + 1; i < count; i++) {
                    if (equip[i].age < equip[min_idx].age){
                        min_idx = i;
                    }
                }
                if(min_idx != step){
                    struct Equipe temp = equip[step];
                    equip[step] = equip[min_idx];
                    equip[min_idx] = temp;
                }
                     afficher_entete_tableau();
                     afficher_joueur(equip[step]);
                      afficher_entete_tableau();
             }
            break;

  case 3:
  boucle_while=0;
  while (boucle_while != 1)
{
  printf("Afficher les joueurs par :\n1)gardien\n2)dأ©fenseur\n3)milieu\n4)attaquant");
  printf("\n Enter num de poste :");
  
  scanf("%d",&choix_de_post);
  if(choix_de_post==1||choix_de_post==2||choix_de_post==3||choix_de_post==4){
 
    boucle_while =1;
  switch(choix_de_post){
   
       case 1:
      
       for (int i = 0; i < count; i++) {
           
       if(strcmp(equip[i].poste,"gardien")==0){
      
                       afficher_entete_tableau();
                     afficher_joueur(equip[i]);
                      afficher_entete_tableau();
     

       }

       }
      
       break;
       case 2:
              for (int i = 0; i < count; i++) {
            
       if(strcmp(equip[i].poste,"defenseur")==0){
                     afficher_entete_tableau();
                     afficher_joueur(equip[i]);
                      afficher_entete_tableau();
     

       }

       }

       break;
       case 3:
       for (int i = 0; i < count; i++) {
            
       if(strcmp(equip[i].poste,"milieu")==0){
                     afficher_entete_tableau();
                     afficher_joueur(equip[i]);
                      afficher_entete_tableau();
     

       }

       }
       break;
       case 4:
        for (int i = 0; i < count; i++) {
            
       if(strcmp(equip[i].poste,"attaquant")==0){
                       afficher_entete_tableau();
                     afficher_joueur(equip[i]);
                      afficher_entete_tableau();
     

       }

       }
       break;

      }
    }else{

  printf("\n !! choix incorect !!\n");
      }
    }

 }

}
void modifier_un_joueur(){
    int choix_modifier;
     boucle_while=0;
     int check;
  while (boucle_while != 1)
{  
    
     printf("\nEnter nom et prenom de jouer pour modifier : ");
  
  fgets(nom_et_prenom_pour_modifier, sizeof(nom_et_prenom_pour_modifier), stdin);
  nom_et_prenom_pour_modifier[strcspn(nom_et_prenom_pour_modifier, "\n")] = '\0';
  
    for(check =0;check < count;check++){
        if(strcmp(equip[check].nom_et_prenom,nom_et_prenom_pour_modifier)==0 && equip[check].statu!=1){
            trouver =0;
    printf("modifier le :\n1)Modifier le poste :\n2)Modifier أ¢ge: \n3)Modifier le nombre de buts :");
     printf("\n choiser :");
     scanf("%d",&choix_modifier);

        if(choix_modifier==1||choix_modifier==2||choix_modifier==3){
            
    switch(choix_modifier){

    case 1:
   
   clear_buffer();
  printf("choisir le neuvaux poste :\n1)gardien: \n2)dأ©fenseur: \n3)milieu: \n4)attaquant: ");
     scanf("%d",&choix_modifier);
     if(choix_modifier==1||choix_modifier==2||choix_modifier==3||choix_modifier==4){
         switch(choix_modifier){
       case 1:
       strcpy(equip[check].poste,"gardien");
       break;
       case 2:
       strcpy(equip[check].poste,"dأ©fenseur");
       break;
       case 3:
       strcpy(equip[check].poste,"milieu");
       break;
       case 4:
       strcpy(equip[check].poste,"attaquant");
       break;

         }
      }
      
      
  
    break;

   case 2:
printf("choisir le neuvaux age pour %s : ",equip[check].nom_et_prenom);
scanf("%d",&equip[check].age);
    break;

   case 3:
     printf("Entre Le Id de joeur : ");
     scanf("%d",&equip[check].buts);

   break;
   
   
    }
    boucle_while=1;
   
    } 
    }
    else if(check +1 == count && trouver == 1){
        printf("!! no trouver !!");}
}

    }
}
void Rechercher_un_joueur(){
int choix_Rechercher;
int id_Rechercher;
int truver=1;
char nom_Rechercher[20];
 printf("\n choix de recherch:\n1)par id : \n2) par nom :");
 printf("\n choisir :");
     scanf("%d",&choix_Rechercher);
     if(choix_Rechercher==1||choix_Rechercher==2){
  switch(choix_Rechercher){
    
         
    case 1:
     printf("\n Entre id :");
     scanf("%d",&id_Rechercher);
     if(id_Rechercher<=nxid &&equip[id_Rechercher-100].statu!=1){
truver =0;
         printf("\nJoueur :id : %d|Nom et prأ©nom : %s|Maillot : %d |Poste : %s|Age : %d|Buts : %d\n", 
                       id_Rechercher-100, equip[id_Rechercher-100].nom_et_prenom, equip[id_Rechercher-100].numeroMaillot, equip[id_Rechercher-100].poste, equip[id_Rechercher-100].age, equip[id_Rechercher-100].buts);
     
     }else if(truver==1){
printf("!! no result !!");
     }

    break;

    case 2:
    clear_buffer();
printf("\nEnter nom  pour Rechercher : ");
  
  fgets(nom_Rechercher, sizeof(nom_Rechercher), stdin);
  nom_Rechercher[strcspn(nom_Rechercher, "\n")] = '\0';
  
    
     
     for(int getnom =0;getnom < count;getnom++){
        char prenom1[50];
        int k = 0;
        int trouv=1;
            while (equip[getnom].nom_et_prenom[k] != ' ' && equip[getnom].nom_et_prenom[k] != '\0') {
                prenom1[k] = equip[getnom].nom_et_prenom[k];
                k++;
            }
            prenom1[k] = '\0';
if(strcmp(prenom1,nom_Rechercher)==0){
trouv=0;
  printf("\nJoueur :id : %d|Nom et prأ©nom : %s|Maillot : %d |Poste : %s|Age : %d|Buts : %d\n", 
                       getnom, equip[getnom].nom_et_prenom, equip[getnom].numeroMaillot, equip[getnom].poste, equip[getnom].age, equip[getnom].buts);
   

}else if(getnom +1 ==count &&trouv==1){

printf("!! no result !!");

}
        }
    
    break;
    }
     }
     
    }

    void Supprimer_un_joueur(){
        int id_pour_Supprimer;
       printf("\n Entre id pour Supprimer :");
       scanf("%d",&id_pour_Supprimer);
       
     if(id_pour_Supprimer<=nxid){
      printf("1");
        for(int r =0;r<=count ;r++){
          printf("2");
            if(equip[r].id==id_pour_Supprimer){
              
           equip[r].statu=1;
              
            }
        }
     }
    } 
    
   void afficher_statistiques() {
    int total = 0;
    int nbGardien = 0, nbDefenseur = 0, nbMilieu = 0, nbAttaquant = 0;
    int totalAge = 0, totalButs = 0;
    int maxButs = -1, idxMaxButs = -1;
    int minAge = 999, idxMinAge = -1;
    int maxAge = -1, idxMaxAge = -1;

    for (int i = 0; i < count; i++) {
        if (equip[i].statu == 1) continue;
        total++;

        // compter par poste
        if (strcmp(equip[i].poste, "gardien") == 0) nbGardien++;
        else if (strcmp(equip[i].poste, "defenseur") == 0) nbDefenseur++;
        else if (strcmp(equip[i].poste, "milieu") == 0) nbMilieu++;
        else if (strcmp(equip[i].poste, "attaquant") == 0) nbAttaquant++;

        // sommes
        totalAge += equip[i].age;
        totalButs += equip[i].buts;

        // meilleur buteur
        if (equip[i].buts > maxButs) {
            maxButs = equip[i].buts;
            idxMaxButs = i;
        }

        // plus jeune
        if (equip[i].age < minAge) {
            minAge = equip[i].age;
            idxMinAge = i;
        }

        // plus âgé
        if (equip[i].age > maxAge) {
            maxAge = equip[i].age;
            idxMaxAge = i;
        }
    }

    printf("\n------------------------- Statistiques de l'équipe -------------------------\n");
    printf("| %-30s | %-30d |\n", "Nombre total de joueurs", total);
    printf("| %-30s | %-30d |\n", "Gardien(s)", nbGardien);
    printf("| %-30s | %-30d |\n", "Défenseur(s)", nbDefenseur);
    printf("| %-30s | %-30d |\n", "Milieu(x)", nbMilieu);
    printf("| %-30s | %-30d |\n", "Attaquant(s)", nbAttaquant);

    if (total > 0) {
        printf("| %-30s | %-30.2f |\n", "Âge moyen", (double)totalAge / total);
        printf("| %-30s | %-30d |\n", "Nombre total de buts", totalButs);
        printf("| %-30s | %-30.2f |\n", "Buts moyen par joueur", (double)totalButs / total);
    }

    if (idxMaxButs != -1) {
        printf("| %-30s | %-30s |\n", "Meilleur buteur", equip[idxMaxButs].nom_et_prenom);
        printf("| %-30s | %-30d |\n", "Nombre de buts", equip[idxMaxButs].buts);
    }
    if (idxMinAge != -1) {
        printf("| %-30s | %-30s |\n", "Plus jeune joueur", equip[idxMinAge].nom_et_prenom);
        printf("| %-30s | %-30d |\n", "Âge", equip[idxMinAge].age);
    }
    if (idxMaxAge != -1) {
        printf("| %-30s | %-30s |\n", "Plus âgé joueur", equip[idxMaxAge].nom_et_prenom);
        printf("| %-30s | %-30d |\n", "Âge", equip[idxMaxAge].age);
    }

    // seuil pour buts
    int seuil, compteur = 0;
    printf("\nEntrez le nombre de buts minimum : ");
    scanf("%d", &seuil);

    for (int i = 0; i < count; i++) {
        if (equip[i].statu != 1 && equip[i].buts > seuil) {
            compteur++;
        }
    }
    printf("| %-30s | %-30d |\n", "Joueurs avec buts > seuil", compteur);

    printf("----------------------------------------------------------------------------\n");
}

    
    void Ajouter_menu(){
        
        int choix_de_ajouter;
        while(choix_de_ajouter!=0){
        printf("choisi:");
        printf("\n1)un joeur");
        printf("\n2) beaucoup de joeur");
        printf("\n0) quiitter ce menu");
        printf("\nchoisir un choix :");
        scanf("%d",&choix_de_ajouter);
        switch(choix_de_ajouter){
            case 1:
            Ajouter_un_joueur(1);
            break;
            case 2:
            choix_de_ajouter=0;
            printf("\nentre le numero de joueurs :");
            scanf("%d",&choix_de_ajouter);
            Ajouter_un_joueur(choix_de_ajouter);
            break;
            
            case 0:
            break;
        }  
     }
 }
void Afficher_menu(){
    int choix_de_Afficher;
        while(choix_de_Afficher!=0){
        printf("choisi:");
        printf("\n1)Trier les joueurs par ordre alphabétique");
        printf("\n2)Trier les joueurs par âge");
        printf("\n3)Afficher les joueurs par poste");
        printf("\nchoisir un choix :");
        printf("\n0)Quitter");
        scanf("%d",&choix_de_Afficher);
        switch(choix_de_Afficher){
            case 1:
            Afficher_un_joueur(1);
            break;
            case 2:
            Afficher_un_joueur(2);
            break;
            case 3:
            Afficher_un_joueur(3);
            break;
            case 0:
            break;
        }  
     }
}

void menu() {
    int choix;
    do {
        printf("\n--- Menu ---\n");
        printf("1. Ajouter menu\n");
        printf("2. Modifier joueur\n");
        printf("3. Supprimer joueur\n");
        printf("4. Afficher menu\n");
        printf("5. Rechercher joueur\n");
         printf("6. statistic \n");
        printf("0. Quitter\n");
        printf("Votre choix: ");
        scanf("%d", &choix);
        clear_buffer();

        switch (choix) {
            case 1: Ajouter_menu(); break;
            case 2: modifier_un_joueur(); break;
            case 3: Supprimer_un_joueur(); break;
            case 4: Afficher_menu(); break;
            case 5: Rechercher_un_joueur(); break;
            case 6: afficher_statistiques(); break;
            case 0: printf("Au revoir!\n"); break;
            default: printf("Choix invalide!\n");
        }
    } while (choix != 0);
}

void  main() {
   struct Equipe e;
   menu();

  }
